/**
 * @fileoverview gRPC-Web generated client stub for npi.core.api
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.19.4
// source: api.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')
const proto = {};
proto.npi = {};
proto.npi.core = {};
proto.npi.core.api = require('./api_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.npi.core.api.AppServerClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.npi.core.api.AppServerPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.npi.core.api.Request,
 *   !proto.npi.core.api.Response>}
 */
const methodDescriptor_AppServer_Chat = new grpc.web.MethodDescriptor(
  '/npi.core.api.AppServer/Chat',
  grpc.web.MethodType.UNARY,
  proto.npi.core.api.Request,
  proto.npi.core.api.Response,
  /**
   * @param {!proto.npi.core.api.Request} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.npi.core.api.Response.deserializeBinary
);


/**
 * @param {!proto.npi.core.api.Request} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.npi.core.api.Response)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.npi.core.api.Response>|undefined}
 *     The XHR Node Readable Stream
 */
proto.npi.core.api.AppServerClient.prototype.chat =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/npi.core.api.AppServer/Chat',
      request,
      metadata || {},
      methodDescriptor_AppServer_Chat,
      callback);
};


/**
 * @param {!proto.npi.core.api.Request} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.npi.core.api.Response>}
 *     Promise that resolves to the response
 */
proto.npi.core.api.AppServerPromiseClient.prototype.chat =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/npi.core.api.AppServer/Chat',
      request,
      metadata || {},
      methodDescriptor_AppServer_Chat);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.npi.core.api.AppSchemaRequest,
 *   !proto.npi.core.api.AppSchemaResponse>}
 */
const methodDescriptor_AppServer_GetAppSchema = new grpc.web.MethodDescriptor(
  '/npi.core.api.AppServer/GetAppSchema',
  grpc.web.MethodType.UNARY,
  proto.npi.core.api.AppSchemaRequest,
  proto.npi.core.api.AppSchemaResponse,
  /**
   * @param {!proto.npi.core.api.AppSchemaRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.npi.core.api.AppSchemaResponse.deserializeBinary
);


/**
 * @param {!proto.npi.core.api.AppSchemaRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.npi.core.api.AppSchemaResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.npi.core.api.AppSchemaResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.npi.core.api.AppServerClient.prototype.getAppSchema =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/npi.core.api.AppServer/GetAppSchema',
      request,
      metadata || {},
      methodDescriptor_AppServer_GetAppSchema,
      callback);
};


/**
 * @param {!proto.npi.core.api.AppSchemaRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.npi.core.api.AppSchemaResponse>}
 *     Promise that resolves to the response
 */
proto.npi.core.api.AppServerPromiseClient.prototype.getAppSchema =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/npi.core.api.AppServer/GetAppSchema',
      request,
      metadata || {},
      methodDescriptor_AppServer_GetAppSchema);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.npi.core.api.AuthorizeRequest,
 *   !proto.npi.core.api.AuthorizeResponse>}
 */
const methodDescriptor_AppServer_Authorize = new grpc.web.MethodDescriptor(
  '/npi.core.api.AppServer/Authorize',
  grpc.web.MethodType.UNARY,
  proto.npi.core.api.AuthorizeRequest,
  proto.npi.core.api.AuthorizeResponse,
  /**
   * @param {!proto.npi.core.api.AuthorizeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.npi.core.api.AuthorizeResponse.deserializeBinary
);


/**
 * @param {!proto.npi.core.api.AuthorizeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.npi.core.api.AuthorizeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.npi.core.api.AuthorizeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.npi.core.api.AppServerClient.prototype.authorize =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/npi.core.api.AppServer/Authorize',
      request,
      metadata || {},
      methodDescriptor_AppServer_Authorize,
      callback);
};


/**
 * @param {!proto.npi.core.api.AuthorizeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.npi.core.api.AuthorizeResponse>}
 *     Promise that resolves to the response
 */
proto.npi.core.api.AppServerPromiseClient.prototype.authorize =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/npi.core.api.AppServer/Authorize',
      request,
      metadata || {},
      methodDescriptor_AppServer_Authorize);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.npi.core.api.AuthorizeRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AppServer_GoogleAuthCallback = new grpc.web.MethodDescriptor(
  '/npi.core.api.AppServer/GoogleAuthCallback',
  grpc.web.MethodType.UNARY,
  proto.npi.core.api.AuthorizeRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.npi.core.api.AuthorizeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.npi.core.api.AuthorizeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.npi.core.api.AppServerClient.prototype.googleAuthCallback =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/npi.core.api.AppServer/GoogleAuthCallback',
      request,
      metadata || {},
      methodDescriptor_AppServer_GoogleAuthCallback,
      callback);
};


/**
 * @param {!proto.npi.core.api.AuthorizeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.npi.core.api.AppServerPromiseClient.prototype.googleAuthCallback =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/npi.core.api.AppServer/GoogleAuthCallback',
      request,
      metadata || {},
      methodDescriptor_AppServer_GoogleAuthCallback);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_AppServer_Ping = new grpc.web.MethodDescriptor(
  '/npi.core.api.AppServer/Ping',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.npi.core.api.AppServerClient.prototype.ping =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/npi.core.api.AppServer/Ping',
      request,
      metadata || {},
      methodDescriptor_AppServer_Ping,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.npi.core.api.AppServerPromiseClient.prototype.ping =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/npi.core.api.AppServer/Ping',
      request,
      metadata || {},
      methodDescriptor_AppServer_Ping);
};


module.exports = proto.npi.core.api;

