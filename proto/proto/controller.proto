syntax = "proto3";

package npi.core.controller;

import "google/protobuf/empty.proto";
//import "api.proto";

option go_package = "github.com/npi-ai/npi/server";

service Controller {
  rpc RegisterTool(RegisterToolRequest) returns (RegisterToolResponse) ;
  rpc UnregisterTool(google.protobuf.Empty) returns (google.protobuf.Empty) ;
  rpc Heartbeat(google.protobuf.Empty) returns (google.protobuf.Empty) ;
}

message RegisterToolRequest {
  ToolSpec tool = 1;
  string hostname = 2;
  string ip = 3;
  int32 port = 4;
}

message RegisterToolResponse {
  string token = 1;
}

message UnregisterToolRequest {
  string id = 1;
}

message HeartbeatRequest {
  string id = 1;
}

message ToolSpec {
  Metadata metadata  = 1;
  FunctionSpec function_spec = 2;
}

message Metadata {
  string id = 1;
  string name = 2;
  string version = 3;
  string description = 4;
  string author = 5;
  bool agent_mode = 6;
}

message FunctionSpec {
  Runtime runtime = 1;
  repeated Dependency dependencies = 2;
  repeated Function functions = 3;
}

enum Language {
  UNKNOWN_LANGUAGE = 0;
  PYTHON = 1;
  NODEJS = 2;
}

message Runtime {
  Language language = 1;
  string version = 2;
  string image = 3;
}

message Dependency {
  string name = 1;
  string version = 2;
}

message Function {
  string name =1;
  string description = 2;
  repeated Parameter parameters = 3;
  repeated FewShot few_shots = 4;
}

enum ParameterType {
  UNKNOWN_TYPE = 0;
  STRING = 1;
  INT = 2;
  FLOAT = 3;
  BOOL = 4;
  MAP = 5;
  LIST = 6;
  FILE = 7;
  IMAGE = 8;
  AUDIO = 9;
  VIDEO = 10;
  DATETIME = 11;
  EMAIL = 12;
}

message Parameter {
  string name = 1;
  string description = 2;
  string type = 3;
  string default = 4;
  bool required = 5;
}

message FewShot {
  string input = 1;
  string output = 2;
}
