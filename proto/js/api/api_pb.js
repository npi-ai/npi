// source: api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.npi.core.api.ActionRequiredResponse', null, global);
goog.exportSymbol('proto.npi.core.api.ActionResultRequest', null, global);
goog.exportSymbol('proto.npi.core.api.ActionType', null, global);
goog.exportSymbol('proto.npi.core.api.AppSchemaRequest', null, global);
goog.exportSymbol('proto.npi.core.api.AppSchemaResponse', null, global);
goog.exportSymbol('proto.npi.core.api.AppType', null, global);
goog.exportSymbol('proto.npi.core.api.AuthorizeRequest', null, global);
goog.exportSymbol('proto.npi.core.api.AuthorizeResponse', null, global);
goog.exportSymbol('proto.npi.core.api.ChatRequest', null, global);
goog.exportSymbol('proto.npi.core.api.ChatResponse', null, global);
goog.exportSymbol('proto.npi.core.api.Request', null, global);
goog.exportSymbol('proto.npi.core.api.Request.RequestCase', null, global);
goog.exportSymbol('proto.npi.core.api.RequestCode', null, global);
goog.exportSymbol('proto.npi.core.api.Response', null, global);
goog.exportSymbol('proto.npi.core.api.Response.ResponseCase', null, global);
goog.exportSymbol('proto.npi.core.api.ResponseCode', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.npi.core.api.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.npi.core.api.Request.oneofGroups_);
};
goog.inherits(proto.npi.core.api.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.npi.core.api.Request.displayName = 'proto.npi.core.api.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.npi.core.api.AppSchemaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.npi.core.api.AppSchemaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.npi.core.api.AppSchemaRequest.displayName = 'proto.npi.core.api.AppSchemaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.npi.core.api.AppSchemaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.npi.core.api.AppSchemaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.npi.core.api.AppSchemaResponse.displayName = 'proto.npi.core.api.AppSchemaResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.npi.core.api.ChatRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.npi.core.api.ChatRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.npi.core.api.ChatRequest.displayName = 'proto.npi.core.api.ChatRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.npi.core.api.ActionResultRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.npi.core.api.ActionResultRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.npi.core.api.ActionResultRequest.displayName = 'proto.npi.core.api.ActionResultRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.npi.core.api.AuthorizeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.npi.core.api.AuthorizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.npi.core.api.AuthorizeRequest.displayName = 'proto.npi.core.api.AuthorizeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.npi.core.api.AuthorizeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.npi.core.api.AuthorizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.npi.core.api.AuthorizeResponse.displayName = 'proto.npi.core.api.AuthorizeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.npi.core.api.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.npi.core.api.Response.oneofGroups_);
};
goog.inherits(proto.npi.core.api.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.npi.core.api.Response.displayName = 'proto.npi.core.api.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.npi.core.api.ChatResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.npi.core.api.ChatResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.npi.core.api.ChatResponse.displayName = 'proto.npi.core.api.ChatResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.npi.core.api.ActionRequiredResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.npi.core.api.ActionRequiredResponse.repeatedFields_, null);
};
goog.inherits(proto.npi.core.api.ActionRequiredResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.npi.core.api.ActionRequiredResponse.displayName = 'proto.npi.core.api.ActionRequiredResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.npi.core.api.Request.oneofGroups_ = [[10,12,99]];

/**
 * @enum {number}
 */
proto.npi.core.api.Request.RequestCase = {
  REQUEST_NOT_SET: 0,
  CHAT_REQUEST: 10,
  ACTION_RESULT_REQUEST: 12,
  EMPTY: 99
};

/**
 * @return {proto.npi.core.api.Request.RequestCase}
 */
proto.npi.core.api.Request.prototype.getRequestCase = function() {
  return /** @type {proto.npi.core.api.Request.RequestCase} */(jspb.Message.computeOneofCase(this, proto.npi.core.api.Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.npi.core.api.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.npi.core.api.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.npi.core.api.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    requestId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    threadId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    chatRequest: (f = msg.getChatRequest()) && proto.npi.core.api.ChatRequest.toObject(includeInstance, f),
    actionResultRequest: (f = msg.getActionResultRequest()) && proto.npi.core.api.ActionResultRequest.toObject(includeInstance, f),
    empty: (f = msg.getEmpty()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.npi.core.api.Request}
 */
proto.npi.core.api.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.npi.core.api.Request;
  return proto.npi.core.api.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.npi.core.api.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.npi.core.api.Request}
 */
proto.npi.core.api.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.npi.core.api.RequestCode} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setThreadId(value);
      break;
    case 10:
      var value = new proto.npi.core.api.ChatRequest;
      reader.readMessage(value,proto.npi.core.api.ChatRequest.deserializeBinaryFromReader);
      msg.setChatRequest(value);
      break;
    case 12:
      var value = new proto.npi.core.api.ActionResultRequest;
      reader.readMessage(value,proto.npi.core.api.ActionResultRequest.deserializeBinaryFromReader);
      msg.setActionResultRequest(value);
      break;
    case 99:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setEmpty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.npi.core.api.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.npi.core.api.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.npi.core.api.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getThreadId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChatRequest();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.npi.core.api.ChatRequest.serializeBinaryToWriter
    );
  }
  f = message.getActionResultRequest();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.npi.core.api.ActionResultRequest.serializeBinaryToWriter
    );
  }
  f = message.getEmpty();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional RequestCode code = 1;
 * @return {!proto.npi.core.api.RequestCode}
 */
proto.npi.core.api.Request.prototype.getCode = function() {
  return /** @type {!proto.npi.core.api.RequestCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.npi.core.api.RequestCode} value
 * @return {!proto.npi.core.api.Request} returns this
 */
proto.npi.core.api.Request.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string request_id = 2;
 * @return {string}
 */
proto.npi.core.api.Request.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.npi.core.api.Request} returns this
 */
proto.npi.core.api.Request.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string thread_id = 3;
 * @return {string}
 */
proto.npi.core.api.Request.prototype.getThreadId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.npi.core.api.Request} returns this
 */
proto.npi.core.api.Request.prototype.setThreadId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ChatRequest chat_request = 10;
 * @return {?proto.npi.core.api.ChatRequest}
 */
proto.npi.core.api.Request.prototype.getChatRequest = function() {
  return /** @type{?proto.npi.core.api.ChatRequest} */ (
    jspb.Message.getWrapperField(this, proto.npi.core.api.ChatRequest, 10));
};


/**
 * @param {?proto.npi.core.api.ChatRequest|undefined} value
 * @return {!proto.npi.core.api.Request} returns this
*/
proto.npi.core.api.Request.prototype.setChatRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.npi.core.api.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.npi.core.api.Request} returns this
 */
proto.npi.core.api.Request.prototype.clearChatRequest = function() {
  return this.setChatRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.npi.core.api.Request.prototype.hasChatRequest = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ActionResultRequest action_result_request = 12;
 * @return {?proto.npi.core.api.ActionResultRequest}
 */
proto.npi.core.api.Request.prototype.getActionResultRequest = function() {
  return /** @type{?proto.npi.core.api.ActionResultRequest} */ (
    jspb.Message.getWrapperField(this, proto.npi.core.api.ActionResultRequest, 12));
};


/**
 * @param {?proto.npi.core.api.ActionResultRequest|undefined} value
 * @return {!proto.npi.core.api.Request} returns this
*/
proto.npi.core.api.Request.prototype.setActionResultRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.npi.core.api.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.npi.core.api.Request} returns this
 */
proto.npi.core.api.Request.prototype.clearActionResultRequest = function() {
  return this.setActionResultRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.npi.core.api.Request.prototype.hasActionResultRequest = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Empty empty = 99;
 * @return {?proto.google.protobuf.Empty}
 */
proto.npi.core.api.Request.prototype.getEmpty = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 99));
};


/**
 * @param {?proto.google.protobuf.Empty|undefined} value
 * @return {!proto.npi.core.api.Request} returns this
*/
proto.npi.core.api.Request.prototype.setEmpty = function(value) {
  return jspb.Message.setOneofWrapperField(this, 99, proto.npi.core.api.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.npi.core.api.Request} returns this
 */
proto.npi.core.api.Request.prototype.clearEmpty = function() {
  return this.setEmpty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.npi.core.api.Request.prototype.hasEmpty = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.npi.core.api.AppSchemaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.npi.core.api.AppSchemaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.npi.core.api.AppSchemaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.AppSchemaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.npi.core.api.AppSchemaRequest}
 */
proto.npi.core.api.AppSchemaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.npi.core.api.AppSchemaRequest;
  return proto.npi.core.api.AppSchemaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.npi.core.api.AppSchemaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.npi.core.api.AppSchemaRequest}
 */
proto.npi.core.api.AppSchemaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.npi.core.api.AppType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.npi.core.api.AppSchemaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.npi.core.api.AppSchemaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.npi.core.api.AppSchemaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.AppSchemaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional AppType type = 1;
 * @return {!proto.npi.core.api.AppType}
 */
proto.npi.core.api.AppSchemaRequest.prototype.getType = function() {
  return /** @type {!proto.npi.core.api.AppType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.npi.core.api.AppType} value
 * @return {!proto.npi.core.api.AppSchemaRequest} returns this
 */
proto.npi.core.api.AppSchemaRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.npi.core.api.AppSchemaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.npi.core.api.AppSchemaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.npi.core.api.AppSchemaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.AppSchemaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    schema: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.npi.core.api.AppSchemaResponse}
 */
proto.npi.core.api.AppSchemaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.npi.core.api.AppSchemaResponse;
  return proto.npi.core.api.AppSchemaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.npi.core.api.AppSchemaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.npi.core.api.AppSchemaResponse}
 */
proto.npi.core.api.AppSchemaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchema(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.npi.core.api.AppSchemaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.npi.core.api.AppSchemaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.npi.core.api.AppSchemaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.AppSchemaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchema();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string schema = 1;
 * @return {string}
 */
proto.npi.core.api.AppSchemaResponse.prototype.getSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.npi.core.api.AppSchemaResponse} returns this
 */
proto.npi.core.api.AppSchemaResponse.prototype.setSchema = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.npi.core.api.AppSchemaResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.npi.core.api.AppSchemaResponse} returns this
 */
proto.npi.core.api.AppSchemaResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.npi.core.api.ChatRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.npi.core.api.ChatRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.npi.core.api.ChatRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.ChatRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    instruction: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.npi.core.api.ChatRequest}
 */
proto.npi.core.api.ChatRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.npi.core.api.ChatRequest;
  return proto.npi.core.api.ChatRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.npi.core.api.ChatRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.npi.core.api.ChatRequest}
 */
proto.npi.core.api.ChatRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.npi.core.api.AppType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstruction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.npi.core.api.ChatRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.npi.core.api.ChatRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.npi.core.api.ChatRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.ChatRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getInstruction();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional AppType type = 1;
 * @return {!proto.npi.core.api.AppType}
 */
proto.npi.core.api.ChatRequest.prototype.getType = function() {
  return /** @type {!proto.npi.core.api.AppType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.npi.core.api.AppType} value
 * @return {!proto.npi.core.api.ChatRequest} returns this
 */
proto.npi.core.api.ChatRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string instruction = 2;
 * @return {string}
 */
proto.npi.core.api.ChatRequest.prototype.getInstruction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.npi.core.api.ChatRequest} returns this
 */
proto.npi.core.api.ChatRequest.prototype.setInstruction = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.npi.core.api.ActionResultRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.npi.core.api.ActionResultRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.npi.core.api.ActionResultRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.ActionResultRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    actionResult: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.npi.core.api.ActionResultRequest}
 */
proto.npi.core.api.ActionResultRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.npi.core.api.ActionResultRequest;
  return proto.npi.core.api.ActionResultRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.npi.core.api.ActionResultRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.npi.core.api.ActionResultRequest}
 */
proto.npi.core.api.ActionResultRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.npi.core.api.ActionResultRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.npi.core.api.ActionResultRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.npi.core.api.ActionResultRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.ActionResultRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getActionResult();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string action_id = 1;
 * @return {string}
 */
proto.npi.core.api.ActionResultRequest.prototype.getActionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.npi.core.api.ActionResultRequest} returns this
 */
proto.npi.core.api.ActionResultRequest.prototype.setActionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string action_result = 2;
 * @return {string}
 */
proto.npi.core.api.ActionResultRequest.prototype.getActionResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.npi.core.api.ActionResultRequest} returns this
 */
proto.npi.core.api.ActionResultRequest.prototype.setActionResult = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.npi.core.api.AuthorizeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.npi.core.api.AuthorizeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.npi.core.api.AuthorizeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.AuthorizeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    credentialsMap: (f = msg.getCredentialsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.npi.core.api.AuthorizeRequest}
 */
proto.npi.core.api.AuthorizeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.npi.core.api.AuthorizeRequest;
  return proto.npi.core.api.AuthorizeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.npi.core.api.AuthorizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.npi.core.api.AuthorizeRequest}
 */
proto.npi.core.api.AuthorizeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.npi.core.api.AppType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = msg.getCredentialsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.npi.core.api.AuthorizeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.npi.core.api.AuthorizeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.npi.core.api.AuthorizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.AuthorizeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCredentialsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional AppType type = 1;
 * @return {!proto.npi.core.api.AppType}
 */
proto.npi.core.api.AuthorizeRequest.prototype.getType = function() {
  return /** @type {!proto.npi.core.api.AppType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.npi.core.api.AppType} value
 * @return {!proto.npi.core.api.AuthorizeRequest} returns this
 */
proto.npi.core.api.AuthorizeRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * map<string, string> credentials = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.npi.core.api.AuthorizeRequest.prototype.getCredentialsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.npi.core.api.AuthorizeRequest} returns this
 */
proto.npi.core.api.AuthorizeRequest.prototype.clearCredentialsMap = function() {
  this.getCredentialsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.npi.core.api.AuthorizeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.npi.core.api.AuthorizeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.npi.core.api.AuthorizeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.AuthorizeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultMap: (f = msg.getResultMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.npi.core.api.AuthorizeResponse}
 */
proto.npi.core.api.AuthorizeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.npi.core.api.AuthorizeResponse;
  return proto.npi.core.api.AuthorizeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.npi.core.api.AuthorizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.npi.core.api.AuthorizeResponse}
 */
proto.npi.core.api.AuthorizeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getResultMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.npi.core.api.AuthorizeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.npi.core.api.AuthorizeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.npi.core.api.AuthorizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.AuthorizeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> result = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.npi.core.api.AuthorizeResponse.prototype.getResultMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.npi.core.api.AuthorizeResponse} returns this
 */
proto.npi.core.api.AuthorizeResponse.prototype.clearResultMap = function() {
  this.getResultMap().clear();
  return this;};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.npi.core.api.Response.oneofGroups_ = [[10,11,99]];

/**
 * @enum {number}
 */
proto.npi.core.api.Response.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  CHAT_RESPONSE: 10,
  ACTION_RESPONSE: 11,
  EMPTY: 99
};

/**
 * @return {proto.npi.core.api.Response.ResponseCase}
 */
proto.npi.core.api.Response.prototype.getResponseCase = function() {
  return /** @type {proto.npi.core.api.Response.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.npi.core.api.Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.npi.core.api.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.npi.core.api.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.npi.core.api.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    requestId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    threadId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    chatResponse: (f = msg.getChatResponse()) && proto.npi.core.api.ChatResponse.toObject(includeInstance, f),
    actionResponse: (f = msg.getActionResponse()) && proto.npi.core.api.ActionRequiredResponse.toObject(includeInstance, f),
    empty: (f = msg.getEmpty()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.npi.core.api.Response}
 */
proto.npi.core.api.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.npi.core.api.Response;
  return proto.npi.core.api.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.npi.core.api.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.npi.core.api.Response}
 */
proto.npi.core.api.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.npi.core.api.ResponseCode} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setThreadId(value);
      break;
    case 10:
      var value = new proto.npi.core.api.ChatResponse;
      reader.readMessage(value,proto.npi.core.api.ChatResponse.deserializeBinaryFromReader);
      msg.setChatResponse(value);
      break;
    case 11:
      var value = new proto.npi.core.api.ActionRequiredResponse;
      reader.readMessage(value,proto.npi.core.api.ActionRequiredResponse.deserializeBinaryFromReader);
      msg.setActionResponse(value);
      break;
    case 99:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setEmpty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.npi.core.api.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.npi.core.api.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.npi.core.api.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getThreadId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChatResponse();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.npi.core.api.ChatResponse.serializeBinaryToWriter
    );
  }
  f = message.getActionResponse();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.npi.core.api.ActionRequiredResponse.serializeBinaryToWriter
    );
  }
  f = message.getEmpty();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseCode code = 1;
 * @return {!proto.npi.core.api.ResponseCode}
 */
proto.npi.core.api.Response.prototype.getCode = function() {
  return /** @type {!proto.npi.core.api.ResponseCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.npi.core.api.ResponseCode} value
 * @return {!proto.npi.core.api.Response} returns this
 */
proto.npi.core.api.Response.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string request_id = 2;
 * @return {string}
 */
proto.npi.core.api.Response.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.npi.core.api.Response} returns this
 */
proto.npi.core.api.Response.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string thread_id = 3;
 * @return {string}
 */
proto.npi.core.api.Response.prototype.getThreadId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.npi.core.api.Response} returns this
 */
proto.npi.core.api.Response.prototype.setThreadId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ChatResponse chat_response = 10;
 * @return {?proto.npi.core.api.ChatResponse}
 */
proto.npi.core.api.Response.prototype.getChatResponse = function() {
  return /** @type{?proto.npi.core.api.ChatResponse} */ (
    jspb.Message.getWrapperField(this, proto.npi.core.api.ChatResponse, 10));
};


/**
 * @param {?proto.npi.core.api.ChatResponse|undefined} value
 * @return {!proto.npi.core.api.Response} returns this
*/
proto.npi.core.api.Response.prototype.setChatResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.npi.core.api.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.npi.core.api.Response} returns this
 */
proto.npi.core.api.Response.prototype.clearChatResponse = function() {
  return this.setChatResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.npi.core.api.Response.prototype.hasChatResponse = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ActionRequiredResponse action_response = 11;
 * @return {?proto.npi.core.api.ActionRequiredResponse}
 */
proto.npi.core.api.Response.prototype.getActionResponse = function() {
  return /** @type{?proto.npi.core.api.ActionRequiredResponse} */ (
    jspb.Message.getWrapperField(this, proto.npi.core.api.ActionRequiredResponse, 11));
};


/**
 * @param {?proto.npi.core.api.ActionRequiredResponse|undefined} value
 * @return {!proto.npi.core.api.Response} returns this
*/
proto.npi.core.api.Response.prototype.setActionResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.npi.core.api.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.npi.core.api.Response} returns this
 */
proto.npi.core.api.Response.prototype.clearActionResponse = function() {
  return this.setActionResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.npi.core.api.Response.prototype.hasActionResponse = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Empty empty = 99;
 * @return {?proto.google.protobuf.Empty}
 */
proto.npi.core.api.Response.prototype.getEmpty = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 99));
};


/**
 * @param {?proto.google.protobuf.Empty|undefined} value
 * @return {!proto.npi.core.api.Response} returns this
*/
proto.npi.core.api.Response.prototype.setEmpty = function(value) {
  return jspb.Message.setOneofWrapperField(this, 99, proto.npi.core.api.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.npi.core.api.Response} returns this
 */
proto.npi.core.api.Response.prototype.clearEmpty = function() {
  return this.setEmpty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.npi.core.api.Response.prototype.hasEmpty = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.npi.core.api.ChatResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.npi.core.api.ChatResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.npi.core.api.ChatResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.ChatResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.npi.core.api.ChatResponse}
 */
proto.npi.core.api.ChatResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.npi.core.api.ChatResponse;
  return proto.npi.core.api.ChatResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.npi.core.api.ChatResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.npi.core.api.ChatResponse}
 */
proto.npi.core.api.ChatResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.npi.core.api.ChatResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.npi.core.api.ChatResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.npi.core.api.ChatResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.ChatResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.npi.core.api.ChatResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.npi.core.api.ChatResponse} returns this
 */
proto.npi.core.api.ChatResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.npi.core.api.ActionRequiredResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.npi.core.api.ActionRequiredResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.npi.core.api.ActionRequiredResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.npi.core.api.ActionRequiredResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.ActionRequiredResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    actionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    optionsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.npi.core.api.ActionRequiredResponse}
 */
proto.npi.core.api.ActionRequiredResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.npi.core.api.ActionRequiredResponse;
  return proto.npi.core.api.ActionRequiredResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.npi.core.api.ActionRequiredResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.npi.core.api.ActionRequiredResponse}
 */
proto.npi.core.api.ActionRequiredResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.npi.core.api.ActionType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.npi.core.api.ActionRequiredResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.npi.core.api.ActionRequiredResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.npi.core.api.ActionRequiredResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.npi.core.api.ActionRequiredResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getActionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional ActionType type = 1;
 * @return {!proto.npi.core.api.ActionType}
 */
proto.npi.core.api.ActionRequiredResponse.prototype.getType = function() {
  return /** @type {!proto.npi.core.api.ActionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.npi.core.api.ActionType} value
 * @return {!proto.npi.core.api.ActionRequiredResponse} returns this
 */
proto.npi.core.api.ActionRequiredResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string action_id = 2;
 * @return {string}
 */
proto.npi.core.api.ActionRequiredResponse.prototype.getActionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.npi.core.api.ActionRequiredResponse} returns this
 */
proto.npi.core.api.ActionRequiredResponse.prototype.setActionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.npi.core.api.ActionRequiredResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.npi.core.api.ActionRequiredResponse} returns this
 */
proto.npi.core.api.ActionRequiredResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string options = 4;
 * @return {!Array<string>}
 */
proto.npi.core.api.ActionRequiredResponse.prototype.getOptionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.npi.core.api.ActionRequiredResponse} returns this
 */
proto.npi.core.api.ActionRequiredResponse.prototype.setOptionsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.npi.core.api.ActionRequiredResponse} returns this
 */
proto.npi.core.api.ActionRequiredResponse.prototype.addOptions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.npi.core.api.ActionRequiredResponse} returns this
 */
proto.npi.core.api.ActionRequiredResponse.prototype.clearOptionsList = function() {
  return this.setOptionsList([]);
};


/**
 * @enum {number}
 */
proto.npi.core.api.RequestCode = {
  REQUEST_UNKNOWN: 0,
  CHAT: 1,
  FETCH: 2,
  ACTION_RESULT: 3
};

/**
 * @enum {number}
 */
proto.npi.core.api.AppType = {
  APP_UNKNOWN: 0,
  GOOGLE_GMAIL: 1,
  GOOGLE_CALENDAR: 2,
  GITHUB: 3,
  SLACK: 4,
  DISCORD: 5,
  TWITTER: 6,
  WEB_BROWSER: 7,
  TWILIO: 8
};

/**
 * @enum {number}
 */
proto.npi.core.api.ResponseCode = {
  RESPONSE_UNKNOWN: 0,
  SUCCESS: 1,
  FAILED: 2,
  MESSAGE: 3,
  ACTION_REQUIRED: 4,
  FINISHED: 5
};

/**
 * @enum {number}
 */
proto.npi.core.api.ActionType = {
  UNKNOWN_ACTION: 0,
  INFORMATION: 1,
  SINGLE_SELECTION: 2,
  MULTIPLE_SELECTION: 3,
  CONFIRMATION: 4
};

goog.object.extend(exports, proto.npi.core.api);
